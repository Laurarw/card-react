{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","img","fcolor","scolor","className","style","background","src","alt","Cards","map","url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMA0BeA,EAtBF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAC9B,OACI,sBAAKC,UAAU,OAAOC,MAAQ,CAC1BC,WAAW,4BAAD,OAA8BJ,EAA9B,aAAyCC,EAAzC,MADd,UAII,qBAAKI,IAAKN,EAAKO,IAAI,aACnB,6BAAKR,QCwCFS,EAhDD,WA8BV,OAEI,aADA,CACA,qBA9BS,CACT,CACE,KAAQ,SACR,IAAO,2CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,QACR,IAAO,0CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,YASHC,KAAK,YAA+B,IAA7BV,EAA4B,EAA5BA,KAAKW,EAAuB,EAAvBA,IAAIT,EAAmB,EAAnBA,OAAOC,EAAY,EAAZA,OACxB,OAAO,cAAC,EAAD,CAEPH,KAAMA,EACNC,IAAKU,EACLT,OAAQA,EACRC,OAAQA,GAJHH,SCbNY,G,MANH,WACV,OAAQ,cAAC,EAAD,MCTKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e2722326.chunk.js","sourcesContent":["import React from 'react';\r\n//clase proptypes\r\nimport PropTypes from \"prop-types\";\r\n//no se puede usar Css como tal en style. React tiene su spropias etiquetas(sin espacios)\r\nconst Card = ({lang, img, fcolor, scolor}) => {\r\n    return (\r\n        <div className=\"card\" style={ {\r\n            background: `linear-gradient(to left, ${fcolor}, ${scolor})`\r\n          \r\n        } }>\r\n            <img src={img} alt=\"lang.svg\" />\r\n            <h3>{lang}</h3>\r\n\r\n        </div>\r\n    )\r\n}\r\n//el objeto PropTypes tiene los tipos de datos para validar\r\n//con esto se valida el tipo de datos permitido\r\nCard.propTypes = {\r\n    lang: PropTypes.string,\r\n    img: PropTypes.string,\r\n    fcolor: PropTypes.string,\r\n    scolor: PropTypes.string\r\n    \r\n\r\n}\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst Cards = () => {\r\n\r\n    const data = [\r\n        {\r\n          \"lang\": \"Python\",\r\n          \"url\": \"https://cdn.svgporn.com/logos/python.svg\",\r\n          \"fcolor\": \"#00c3ff\",\r\n          \"scolor\": \"#ffff1c\"\r\n        },\r\n        {\r\n          \"lang\": \"Java\",\r\n          \"url\": \"https://cdn.svgporn.com/logos/java.svg\",\r\n          \"fcolor\": \"#D31027\",\r\n          \"scolor\": \"#EA384D\"\r\n        },\r\n        {\r\n          \"lang\": \"React\",\r\n          \"url\": \"https://cdn.svgporn.com/logos/react.svg\",\r\n          \"fcolor\": \"#000428\",\r\n          \"scolor\": \"#004e92\"\r\n        },\r\n        {\r\n          \"lang\": \"Perl\",\r\n          \"url\": \"https://cdn.svgporn.com/logos/perl.svg\",\r\n          \"fcolor\": \"#cc2b5e\",\r\n          \"scolor\": \"#753a88\"\r\n        }\r\n    ];\r\n      \r\n\r\n    return (\r\n        // <React.Fragment></React.Fragment> es lo mismo a lo de abajo(<> </>)\r\n        <>\r\n        {\r\n            data.map( ({lang,url,fcolor,scolor}) => {\r\n                return <Card \r\n                key={lang} \r\n                lang={lang} \r\n                img={url}\r\n                fcolor={fcolor}\r\n                scolor={scolor} />;\r\n            })\r\n        }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","//import { Contador } from \"./components/Contador\";\n//esto de arriba lo genera qeu en contador, dice export const Contador\n\n// En cambio cuando se pone export default Contador (abajo en Contador.jsx), se puede poner asi:\n//import MiContador from \"./components/Contador\"; //puedo ponerle cualquier nombre Micontador, ElContador, etc. No puede usar llaves\n//pero para vamos a usar lo siguiente para que se note que es el mismo.\n//vamos a usar el nombre del componente para no confundir\n// import Contador from \"./components/Contador\"; \n// const App = () =>{\n//   return <Contador inicial={5} factor={3} />\n// }\n\n//clase estructurar\n//import Card from \"./components/Card\"\n\n//clase fragment\n\nimport Cards from \"./components/Cards\"\nimport \"./components/Card.css\"\n\nconst App = () => {\n  return  <Cards />\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // nos obliga a escribir correctamente a las reglas de react\n  <React.StrictMode> \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}